spring.application.name=Experiment.boot.metrics


debug=false
# global definitions

server.port=8080
spring.output.ansi.enabled=ALWAYS


#JMX
spring.jmx.enabled=true
endpoints.jmx.domain=biz.daich


# global logging
#logging.level.org.springframework.web=WARN
#logging.level.org.springframework=WARN
#logging.level.org.springframework.context=WARN
#logging.level.org.hibernate=ERROR

# debug Hibernate
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


jolokia.config.debug=true

#spring-boot-admin Server configurations
#see http://codecentric.github.io/spring-boot-admin/1.4.2/
spring.boot.admin.context-path=/bootadmin
spring.boot.admin.monitor.period=1000
spring.boot.admin.monitor.status-lifetime=1000
spring.boot.admin.discovery.enabled=false

#Those are configurations for the app to be a client to the spring-boot-admin
# Note that in this case this is the same application
#see http://codecentric.github.io/spring-boot-admin/1.4.2/
spring.boot.admin.url=http://localhost:8080/bootadmin
spring.boot.admin.auto-deregistration=true
spring.boot.admin.client.name="Experiment.boot.metrics"


management.health.db.enabled=true
management.health.defaults.enabled=true
management.health.diskspace.enabled=true